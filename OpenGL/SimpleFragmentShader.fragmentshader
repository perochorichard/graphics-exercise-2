#version 330

in vec3 retColor;
in vec2 retTexCoord;

out vec4 FragColor;

uniform sampler2D sampler1;
uniform sampler2D sampler2;
uniform int yScale;
uniform int uScale;
uniform int vScale;
uniform bool invertColors;

vec3 rgbToYuv(vec3 rgb) {
    mat3 rgbToYuvMatrix = {
		{ 0.299,    0.587,    0.114},
		{-0.14713, -0.28886,  0.436},
		{ 0.615,   -0.51499, -0.10001}
	};
    return rgb * rgbToYuvMatrix;
}

vec3 yuvToRgb(vec3 yuv) {
    mat3 yuvToRgbMatrix = {
		{1,  0,        1.13983},
		{1, -0.39465, -0.58060},
		{1,  2.03211,  0}
	};
    return yuv * yuvToRgbMatrix;
}

void main() {
	vec3 yuvColor = rgbToYuv(retColor);
	yuvColor.x *= float(yScale)/100.0f;
	yuvColor.y *= float(uScale)/100.0f;
	yuvColor.z *= float(vScale)/100.0f;
	vec3 scaledRgbColor = yuvToRgb(yuvColor);

	vec3 finalColor = invertColors ? vec3(1.0) - scaledRgbColor : scaledRgbColor;

	FragColor = mix(texture(sampler1, retTexCoord), texture(sampler2, retTexCoord), 0.5) * vec4(finalColor, 1.0f); // 50% blend
}